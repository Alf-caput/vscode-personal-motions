{
    // ██╗░░░██╗██╗███╗░░░███╗
    // ██║░░░██║██║████╗░████║
    // ╚██╗░██╔╝██║██╔████╔██║
    // ░╚████╔╝░██║██║╚██╔╝██║
    // ░░╚██╔╝░░██║██║░╚═╝░██║
    // ░░░╚═╝░░░╚═╝╚═╝░░░░░╚═╝

    // IMPORTANT:
    // Vscode handles some things different than regular vim:
    // - While in the end of line search for "\n" will return "\n" of current line
    // - Others ...

    // █▀ █▀▀ ▀█▀ ▀█▀ █ █▄░█ █▀▀ █▀
    // ▄█ ██▄ ░█░ ░█░ █ █░▀█ █▄█ ▄█

    "vim.useSystemClipboard": true,
    "vim.leader": "<space>",
    "editor.wordSeparators": "[]~!@#$%^&*()-=+{}|;:'\",.<>/?",

    // ███╗░░██╗░█████╗░██████╗░███╗░░░███╗░█████╗░██╗░░░░░
    // ████╗░██║██╔══██╗██╔══██╗████╗░████║██╔══██╗██║░░░░░
    // ██╔██╗██║██║░░██║██████╔╝██╔████╔██║███████║██║░░░░░
    // ██║╚████║██║░░██║██╔══██╗██║╚██╔╝██║██╔══██║██║░░░░░
    // ██║░╚███║╚█████╔╝██║░░██║██║░╚═╝░██║██║░░██║███████╗
    // ╚═╝░░╚══╝░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝░░╚═╝╚══════╝
    "vim.normalModeKeyBindingsNonRecursive": [

        // █░█ █▀ █▀▀ █▀█ █▀▄ █▀▀   █▄░█ █▀█ █▀█ █▀▄▀█ ▄▀█ █░░
        // ▀▄▀ ▄█ █▄▄ █▄█ █▄▀ ██▄   █░▀█ █▄█ █▀▄ █░▀░█ █▀█ █▄▄

        // Use vscode undo/redo
        {
            "before" : ["u"], "commands" : ["undo"]
        },
        {
            "before" : ["<C-r>"], "commands" : ["redo"]
        },


        // █░█ █▀ █▀▀ █▀█ █▀▄ █▀▀   █▀▀ █▀█ █▀▄▀█ █▀▄▀█ █▀█ █▄░█
        // ▀▄▀ ▄█ █▄▄ █▄█ █▄▀ ██▄   █▄▄ █▄█ █░▀░█ █░▀░█ █▄█ █░▀█

        // Common keybindings with normal mode
        // Conflicts with current mode are commented

        // Comment
        {
            "before": ["<leader>", "c"],
            "commands": ["editor.action.commentLine"],
            "when": "editorTextFocus && !editorReadonly"
        },

        // Vscode tab
        {
            "before": ["<tab>"], 
            "commands": ["tab",],
            "silent": true
        },
        {
            "before": ["shift", "<tab>"], 
            "commands": ["outdent"],
            "silent": true
        },

        // Show vscode commands
        {
            "before": ["<leader>", ":"], 
            "commands": ["workbench.action.showCommands"],
            "silent": true
        },

        // █░█ █ █▀▄▀█   █▄░█ █▀█ █▀█ █▀▄▀█ ▄▀█ █░░
        // ▀▄▀ █ █░▀░█   █░▀█ █▄█ █▀▄ █░▀░█ █▀█ █▄▄

        // D and C same as V and Y
        {
            "before": ["D"], "after": ["d", "d"]
        },
        {
            "before": ["C"], "after": ["c", "c"]
        },
        // Remove old dd and cc
        {
            "before": ["d", "d"], "after": [""]
        },
        {
            "before": ["c", "c"], "after": [""]
        },

        // █░█ █ █▀▄▀█   █▀▀ █▀█ █▀▄▀█ █▀▄▀█ █▀█ █▄░█
        // ▀▄▀ █ █░▀░█   █▄▄ █▄█ █░▀░█ █░▀░█ █▄█ █░▀█

        // Common keybindings with normal mode
        // Conflicts with current mode are commented

        // Spanish <Esc>
        {
            "before" : ["Ñ"], "after" : ["<Esc>"]
        },

        // w to jump over words or sentences with hjkl motions
        {
            "before": ["w", "h"], "after": ["b"]
        },
        {
            "before": ["w", "l"], "after": ["e"]
        },
        {
            "before": ["w", "k"], "after": ["("]
        },
        {
            "before": ["w", "j"], "after": [")"]
        },
        {
            "before": ["w", "H"], "after": ["b"]
        },
        {
            "before": ["w", "L"], "after": ["e"]
        },
        {
            "before": ["w", "K"], "after": ["("]
        },
        {
            "before": ["w", "J"], "after": [")"]
        },
        // W HJKL same behaviour but whitespace is word delimeter
        // Note: W KJ jumps in paragraphs and vscode jump line differs from regular vim
        {
            "before": ["W", "H"], "after": ["B"]
        },
        {
            "before": ["W", "L"], "after": ["E"]
        },
        {
            "before": ["W", "K"], "after": ["{"], 
        },
        {
            "before": ["W", "J"], "after": ["}"]
        },
        {
            "before": ["W", "h"], "after": ["B"]
        },
        {
            "before": ["W", "l"], "after": ["E"]
        },
        {
            "before": ["W", "k"], "after": ["{"], 
        },
        {
            "before": ["W", "j"], "after": ["}"]
        },
        // Disable old w and W
        {
            "before": ["w"], "after": [""]
        },
        {
            "before": ["W"], "after": [""]
        },

        // fl as f and fh as F
        {
            "before": ["f", "l"], "after": ["f"]
        },
        {
            "before": ["f", "h"], "after": ["F"]
        },
        {
            "before": ["f", "L"], "after": ["f"]
        },
        {
            "before": ["f", "H"], "after": ["F"]
        },
        // Fh as / and Fl as ?
        {
            "before": ["F", "l"], "after": ["/"]
        },
        {
            "before": ["F", "h"], "after": ["?"]
        },
        {
            "before": ["F", "L"], "after": ["/"]
        },
        {
            "before": ["F", "H"], "after": ["?"]
        },
        // Disable old f and F
        {
            "before": ["f"], "after": [""]
        },
        {
            "before": ["F"], "after": [""]
        },

        // tl as t
        {
            "before": ["t", "l"], "after": ["t"]
        },
        {
            "before": ["T", "l"], "after": ["t"]
        },
        {
            "before": ["T", "L"], "after": ["t"]
        },
        // th as T
        {
            "before": ["t", "h"], "after": ["T"]
        },
        {
            "before": ["T", "h"], "after": ["T"]
        },
        {
            "before": ["T", "H"], "after": ["T"]
        },
        // Disable old t and T
        {
            "before": ["t"], "after": [""]
        },
        {
            "before": ["T"], "after": [""]
        },

        // Go to boundaries with g hjkl
        {
            "before": ["g", "k"], "after": ["g", "g", "^"]
        },
        {
            "before": ["g", "j"], "after": ["G", "g", "_"]
        },
        {
            "before": ["g", "h"], "after": ["^"]
        },
        {
            "before": ["g", "l"], "after": ["g", "_"]
        },

    ],

    // ███╗░░░███╗░█████╗░████████╗██╗░█████╗░███╗░░██╗░██████╗
    // ████╗░████║██╔══██╗╚══██╔══╝██║██╔══██╗████╗░██║██╔════╝
    // ██╔████╔██║██║░░██║░░░██║░░░██║██║░░██║██╔██╗██║╚█████╗░
    // ██║╚██╔╝██║██║░░██║░░░██║░░░██║██║░░██║██║╚████║░╚═══██╗
    // ██║░╚═╝░██║╚█████╔╝░░░██║░░░██║╚█████╔╝██║░╚███║██████╔╝
    // ╚═╝░░░░░╚═╝░╚════╝░░░░╚═╝░░░╚═╝░╚════╝░╚═╝░░╚══╝╚═════╝░
    "vim.operatorPendingModeKeyBindingsNonRecursive": [

        // █░█ █ █▀▄▀█   █▀█ █▀▀ █▄░█ █▀▄ █ █▄░█ █▀▀
        // ▀▄▀ █ █░▀░█   █▀▀ ██▄ █░▀█ █▄▀ █ █░▀█ █▄█

        // One character
        {
            "before": ["x"], "after": ["l"]
        },
        // This indent level (plugin vim-indent-object)
        {
            "before": ["X"], "after": ["i", "i"]
        },

        // More intuitive motions
        {
            "before": ["h"], "after": ["b"]
        },
        {
            "before": ["l"], "after": ["w"]
        },
        {
            "before": ["j"], "after": [")"]
        },
        {
            "before": ["k"], "after": ["("]
        },
        {
            "before": ["H"], "after": ["B"]
        },
        {
            "before": ["L"], "after": ["W"]
        },
        {
            "before": ["J"], "after": ["}"]
        },
        {
            "before": ["K"], "after": ["{"]
        },

        // █░█ █ █▀▄▀█   █▀▀ █▀█ █▀▄▀█ █▀▄▀█ █▀█ █▄░█
        // ▀▄▀ █ █░▀░█   █▄▄ █▄█ █░▀░█ █░▀░█ █▄█ █░▀█

        // Common keybindings with normal mode
        // Conflicts with current mode are commented

        // Spanish <Esc>
        {
            "before" : ["Ñ"], "after" : ["<Esc>"]
        },

        // w to jump over words or sentences with hjkl motions
        // {
        //     "before": ["w", "h"], "after": ["b"]
        // },
        // {
        //     "before": ["w", "l"], "after": ["e"]
        // },
        // {
        //     "before": ["w", "k"], "after": ["("]
        // },
        // {
        //     "before": ["w", "j"], "after": [")"]
        // },
        // {
        //     "before": ["w", "H"], "after": ["b"]
        // },
        // {
        //     "before": ["w", "L"], "after": ["e"]
        // },
        // {
        //     "before": ["w", "K"], "after": ["("]
        // },
        // {
        //     "before": ["w", "J"], "after": [")"]
        // },
        // // W HJKL same behaviour but whitespace is word delimeter
        // // Note: W KJ jumps in paragraphs and vscode jump line differs from regular vim
        // {
        //     "before": ["W", "H"], "after": ["B"]
        // },
        // {
        //     "before": ["W", "L"], "after": ["E"]
        // },
        // {
        //     "before": ["W", "K"], "after": ["{"], 
        // },
        // {
        //     "before": ["W", "J"], "after": ["}"]
        // },
        // {
        //     "before": ["W", "h"], "after": ["B"]
        // },
        // {
        //     "before": ["W", "l"], "after": ["E"]
        // },
        // {
        //     "before": ["W", "k"], "after": ["{"], 
        // },
        // {
        //     "before": ["W", "j"], "after": ["}"]
        // },
        // Disable old w and W
        {
            "before": ["w"], "after": [""]
        },
        {
            "before": ["W"], "after": [""]
        },

        // fl as f and fh as F
        {
            "before": ["f", "l"], "after": ["f"]
        },
        {
            "before": ["f", "h"], "after": ["F"]
        },
        {
            "before": ["f", "L"], "after": ["f"]
        },
        {
            "before": ["f", "H"], "after": ["F"]
        },
        // Fh as / and Fl as ?
        {
            "before": ["F", "l"], "after": ["/"]
        },
        {
            "before": ["F", "h"], "after": ["?"]
        },
        {
            "before": ["F", "L"], "after": ["/"]
        },
        {
            "before": ["F", "H"], "after": ["?"]
        },
        // Disable old f and F
        {
            "before": ["f"], "after": [""]
        },
        {
            "before": ["F"], "after": [""]
        },

        // tl as t
        {
            "before": ["t", "l"], "after": ["t"]
        },
        {
            "before": ["T", "l"], "after": ["t"]
        },
        {
            "before": ["T", "L"], "after": ["t"]
        },
        // th as T
        {
            "before": ["t", "h"], "after": ["T"]
        },
        {
            "before": ["T", "h"], "after": ["T"]
        },
        {
            "before": ["T", "H"], "after": ["T"]
        },
        // Disable old t and T
        {
            "before": ["t"], "after": [""]
        },
        {
            "before": ["T"], "after": [""]
        },

        // Go to boundaries with g hjkl
        {
            "before": ["g", "k"], "after": ["g", "g", "^"]
        },
        {
            "before": ["g", "j"], "after": ["G", "g", "_"]
        },
        {
            "before": ["g", "h"], "after": ["^"]
        },
        {
            "before": ["g", "l"], "after": ["g", "_"]
        },

    ],

    // ██╗░░░██╗██╗░██████╗██╗░░░██╗░█████╗░██╗░░░░░
    // ██║░░░██║██║██╔════╝██║░░░██║██╔══██╗██║░░░░░
    // ╚██╗░██╔╝██║╚█████╗░██║░░░██║███████║██║░░░░░
    // ░╚████╔╝░██║░╚═══██╗██║░░░██║██╔══██║██║░░░░░
    // ░░╚██╔╝░░██║██████╔╝╚██████╔╝██║░░██║███████╗
    // ░░░╚═╝░░░╚═╝╚═════╝░░╚═════╝░╚═╝░░╚═╝╚══════╝
    "vim.visualModeKeyBindingsNonRecursive": [

        // █░█ █▀ █▀▀ █▀█ █▀▄ █▀▀   █▀▀ █▀█ █▀▄▀█ █▀▄▀█ █▀█ █▄░█
        // ▀▄▀ ▄█ █▄▄ █▄█ █▄▀ ██▄   █▄▄ █▄█ █░▀░█ █░▀░█ █▄█ █░▀█

        // Common keybindings with normal mode
        // Conflicts with current mode are commented

        // Comment
        {
            "before": ["<leader>", "c"],
            "commands": ["editor.action.commentLine"],
            "when": "editorTextFocus && !editorReadonly"
        },

        // Vscode tab
        {
            "before": ["<tab>"], 
            "commands": ["tab",],
            "silent": true
        },
        {
            "before": ["shift", "<tab>"], 
            "commands": ["outdent",],
            "silent": true
        },

        // Show vscode commands
        {
            "before": ["<leader>", ":"], 
            "commands": ["workbench.action.showCommands",],
            "silent": true
        },

        // █░█ █ █▀▄▀█   █░█ █ █▀ █░█ ▄▀█ █░░
        // ▀▄▀ █ █░▀░█   ▀▄▀ █ ▄█ █▄█ █▀█ █▄▄

        // Paste in visual mode without overriding register
        {
            "before": ["p"], "after": ["p", "g", "v", "y"]
        },
        
        // Better yanking
        {
            "before": ["y"], "after": ["y", "g", "v", "<Esc>"]
        },
        
        // █░█ █ █▀▄▀█   █▀▀ █▀█ █▀▄▀█ █▀▄▀█ █▀█ █▄░█
        // ▀▄▀ █ █░▀░█   █▄▄ █▄█ █░▀░█ █░▀░█ █▄█ █░▀█

        // Common keybindings with normal mode
        // Conflicts with current mode are commented

        // Spanish <Esc>
        {
            "before" : ["Ñ"], "after" : ["<Esc>"]
        },

        // w to jump over words or sentences with hjkl motions
        {
            "before": ["w", "h"], "after": ["b"]
        },
        {
            "before": ["w", "l"], "after": ["e"]
        },
        {
            "before": ["w", "k"], "after": ["("]
        },
        {
            "before": ["w", "j"], "after": [")"]
        },
        {
            "before": ["w", "H"], "after": ["b"]
        },
        {
            "before": ["w", "L"], "after": ["e"]
        },
        {
            "before": ["w", "K"], "after": ["("]
        },
        {
            "before": ["w", "J"], "after": [")"]
        },
        // W HJKL same behaviour but whitespace is word delimeter
        // Note: W KJ jumps in paragraphs and vscode jump line differs from regular vim
        {
            "before": ["W", "H"], "after": ["B"]
        },
        {
            "before": ["W", "L"], "after": ["E"]
        },
        {
            "before": ["W", "K"], "after": ["{"], 
        },
        {
            "before": ["W", "J"], "after": ["}"]
        },
        {
            "before": ["W", "h"], "after": ["B"]
        },
        {
            "before": ["W", "l"], "after": ["E"]
        },
        {
            "before": ["W", "k"], "after": ["{"], 
        },
        {
            "before": ["W", "j"], "after": ["}"]
        },
        // Disable old w and W
        {
            "before": ["w"], "after": [""]
        },
        {
            "before": ["W"], "after": [""]
        },

        // fl as f and fh as F
        {
            "before": ["f", "l"], "after": ["f"]
        },
        {
            "before": ["f", "h"], "after": ["F"]
        },
        {
            "before": ["f", "L"], "after": ["f"]
        },
        {
            "before": ["f", "H"], "after": ["F"]
        },
        // Fh as / and Fl as ?
        {
            "before": ["F", "l"], "after": ["/"]
        },
        {
            "before": ["F", "h"], "after": ["?"]
        },
        {
            "before": ["F", "L"], "after": ["/"]
        },
        {
            "before": ["F", "H"], "after": ["?"]
        },
        // Disable old f and F
        {
            "before": ["f"], "after": [""]
        },
        {
            "before": ["F"], "after": [""]
        },

        // tl as t
        {
            "before": ["t", "l"], "after": ["t"]
        },
        {
            "before": ["T", "l"], "after": ["t"]
        },
        {
            "before": ["T", "L"], "after": ["t"]
        },
        // th as T
        {
            "before": ["t", "h"], "after": ["T"]
        },
        {
            "before": ["T", "h"], "after": ["T"]
        },
        {
            "before": ["T", "H"], "after": ["T"]
        },
        // Disable old t and T
        {
            "before": ["t"], "after": [""]
        },
        {
            "before": ["T"], "after": [""]
        },

        // Go to boundaries with g hjkl
        {
            "before": ["g", "k"], "after": ["g", "g", "^"]
        },
        {
            "before": ["g", "j"], "after": ["G", "g", "_"]
        },
        {
            "before": ["g", "h"], "after": ["^"]
        },
        {
            "before": ["g", "l"], "after": ["g", "_"]
        },

    ],

    // ██╗███╗░░██╗░██████╗███████╗██████╗░████████╗
    // ██║████╗░██║██╔════╝██╔════╝██╔══██╗╚══██╔══╝
    // ██║██╔██╗██║╚█████╗░█████╗░░██████╔╝░░░██║░░░
    // ██║██║╚████║░╚═══██╗██╔══╝░░██╔══██╗░░░██║░░░
    // ██║██║░╚███║██████╔╝███████╗██║░░██║░░░██║░░░
    // ╚═╝╚═╝░░╚══╝╚═════╝░╚══════╝╚═╝░░╚═╝░░░╚═╝░░░
    "vim.insertModeKeyBindings": [
        
        // Spanish <Esc>
        {
            "before" : ["Ñ"], "after" : ["<Esc>"]
        },
    ],


// ██╗░░██╗░█████╗░██╗░░██╗░█████╗░██╗░░░██╗███╗░░██╗███████╗
// ██║░██╔╝██╔══██╗██║░██╔╝██╔══██╗██║░░░██║████╗░██║██╔════╝
// █████═╝░███████║█████═╝░██║░░██║██║░░░██║██╔██╗██║█████╗░░
// ██╔═██╗░██╔══██║██╔═██╗░██║░░██║██║░░░██║██║╚████║██╔══╝░░
// ██║░╚██╗██║░░██║██║░╚██╗╚█████╔╝╚██████╔╝██║░╚███║███████╗
// ╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░░╚═════╝░╚═╝░░╚══╝╚══════╝
    "dance.modes": {
        "character": {
            "cursorStyle": "line",
            "lineNumbers": "relative",
            "decorations": {
                "applyTo": "main",
                "backgroundColor": "$editor.hoverHighlightBackground",
                "isWholeLine": true
            },
            "onEnterMode": [
                [".selections.restore", {"register": " ^", "try": true}]
            ],
            "onLeaveMode": [
                [".selections.save", {"register": " ^"}]
            ]
        },
        "word": {
            "cursorStyle": "line-thin",
            "lineNumbers": "relative",
            "decorations": {
                "applyTo": "main",
                "backgroundColor": "$editor.hoverHighlightBackground",
                "isWholeLine": true
            },
            "onEnterMode": [
                [".selections.restore", {"register": " ^", "try": true}]
            ],
            "onLeaveMode": [
                [".selections.save", {"register": " ^"}]
            ]
        },
        "WORD": {
            "cursorStyle": "line-thin",
            "lineNumbers": "relative",
            "decorations": {
                "applyTo": "main",
                "backgroundColor": "$editor.hoverHighlightBackground",
                "isWholeLine": true
            },
            "onEnterMode": [
                [".selections.restore", {"register": " ^", "try": true}]
            ],
            "onLeaveMode": [
                [".selections.save", {"register": " ^"}]
            ]
        },
        "line": {
            "cursorStyle": "block",
            "selectionBehavior": "character",
            "lineNumbers": "relative",
            "decorations": {
                "applyTo": "main",
                "backgroundColor": "$editor.hoverHighlightBackground",
                "isWholeLine": true
            },
            "onEnterMode": [
                [".selections.expandToLines"]
            ],
            "onLeaveMode": [
                [".selections.save", {"register": " ^"}]
            ]
        },
        "LINE": {
            "cursorStyle": "block",
            "selectionBehavior": "character",
            "lineNumbers": "relative",
            "decorations": {
                "applyTo": "main",
                "backgroundColor": "$editor.hoverHighlightBackground",
                "isWholeLine": true
            },
            "onEnterMode": [
                [".selections.expandToLines"]
            ],
            "onLeaveMode": [
                [".selections.save", {"register": " ^"}]
            ]
        },
    },
    "dance.defaultMode": "normal",




    "terminal.integrated.defaultProfile.windows": "Command Prompt",
    "workbench.iconTheme": "vscode-icons",
    "workbench.startupEditor": "none",
    "window.zoomLevel": -1,
    "python.terminal.executeInFileDir": true,
    "workbench.activityBar.visible": false,
    "vsicons.dontShowNewVersionMessage": true,
    "code-runner.runInTerminal": true,
}