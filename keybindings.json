// Place your key bindings in this file to override the defaults
[
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "x",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "-filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f",
        "command": "filesExplorer.findInFolder",
        "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "-filesExplorer.findInFolder",
        "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "l",
        "command": "filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "space",
        "command": "-filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "-filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "Shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "Ctrl+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "Ctrl+e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.explorer' || activeViewlet == 'workbench.view.search'|| activeViewlet == 'workbench.view.scm'|| activeViewlet == 'workbench.view.debug'|| activeViewlet == 'workbench.view.extensions' || activeViewlet == 'workbench.view.extension.test'|| activeViewlet == 'workbench.view.extension.bookmarks'|| activeViewlet == 'workbench.view.extension.project-manager' || activeViewlet == 'workbench.view.extension.gitlens'|| activeViewlet == 'workbench.view.extension.todo-tree-container'|| activeViewlet == 'snippet-explorer'"
    },
    {
        "key": "tab+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "!editorTextFocus"
    },
    {
        "key": "tab+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "!editorTextFocus"
    },
    
    // █▄▀ ▄▀█ █▄▀ █▀█ █░█ █▄░█ █▀▀
    // █░█ █▀█ █░█ █▄█ █▄█ █░▀█ ██▄
    {
        "key": "shift+oem_3",
        "command": "dance.modes.set",
        "args": {"input": "NORMAL"},
        "when": "editorTextFocus && (dance.mode == normal || dance.mode == insert)"
    },
    {
        "key": "shift+oem_3",
        "command": "dance.modes.set.normal",
        "when": "editorTextFocus && dance.mode != normal"
    },
    {
        "key": "space",
        // "command": "dance.selections.expandToLines",
        "command": "dance.run",
        "args": {
            "commands": [
                [".selections.expandToLines"],
                [".selections.changeDirection"]
            ]
        },
        "when": "editorTextFocus && dance.mode == 'NORMAL'"
    },

    // I
    {
        "key": "i",
        "command":"dance.modes.insert.before" ,
        "when": "editorTextFocus && dance.mode != disabled && dance.mode != insert"
    },
    {
        "key": "shift+i",
        "command": "dance.modes.insert.lineStart",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    

    // A
    {
        "key": "a",
        "command":"dance.modes.insert.after" ,
        "when": "editorTextFocus && dance.mode != disabled && dance.mode != insert"
    },
    {
        "key": "shift+a",
        "command": "dance.modes.insert.lineEnd",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    
    
    // H
    {
        "key": "h",
        "command": "dance.seek.word.backward",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+h",
        "command": "dance.seek.word.ws.backward",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+h",
        "command": "dance.seek.word.extend.backward",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+shift+h",
        "command": "dance.seek.word.ws.extend.backward",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },


    // L
    {
        "key": "l",
        "command": "dance.seek.wordEnd",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+l",
        "command": "dance.seek.wordEnd.ws",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+l",
        "command": "dance.seek.wordEnd.extend",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+shift+l",
        "command": "dance.seek.wordEnd.ws.extend",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    

    // J
    {
        "key": "j",
        "command": "dance.select.down.jump",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+j",
        "command": "dance.seek.object",
        "args": {"input": "(?#predefined=paragraph)", "where": "end"},
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+j",
        "command": "dance.select.line.below.extend",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+shift+j",
        "command": "dance.seek.object",
        "args": {"input": "(?#predefined=paragraph)", "where": "end", "shift": "extend"},
        "when": "editorTextFocus && dance.mode == NORMAL"
    },

    
    // K
    {
        "key": "k",
        "command": "dance.select.up.jump",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+k",
        "command": "dance.seek.object",
        "args": {"input": "(?#predefined=paragraph)", "where": "start"},
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+k",
        "command": "dance.select.line.above.extend",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "alt+shift+k",
        "command": "dance.seek.object",
        "args": {"input": "(?#predefined=paragraph)", "where": "start", "shift": "extend"},
        "when": "editorTextFocus && dance.mode == NORMAL"
    },

    
    // " Not all registers work, for now use ñ and o
    {
        "key": "shift+alt+2",
        "command": "dance.selectRegister",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },


    // Y
    {
        "key": "y",
        "command": "dance.selections.saveText",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+y",
        "command": "dance.run",
        "args": {
            "commands": [
                ["dance.select.line.above.extend"],
                ["dance.selections.saveText"]
            ]
        },
        "when": "editorTextFocus && dance.mode == NORMAL"
    },

    // P
    {
        "key": "p",
        "command": "dance.edit.paste.after.select",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+p",
        "command": "dance.edit.paste.before.select",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },


    // D
    {
        "key": "d",
        "command": "dance.edit.yank-delete",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+d",
        "command": "dance.run",
        "args": {
            "commands": [
                ["dance.select.line.above.extend"],
                ["dance.edit.yank-delete"]
            ]
        },
        "when": "editorTextFocus && dance.mode == NORMAL"
    },

    // C
    {
        "key": "c",
        "command": "dance.edit.yank-delete-insert",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+c",
        "command": "dance.run",
        "args": {
            "commands": [
                ["dance.select.line.above.extend"],
                ["dance.edit.yank-delete-insert"]
            ]
        },
        "when": "editorTextFocus && dance.mode == NORMAL"
    },


    // R Best option to replace with default register use delete with back then paste
    {
        "key": "r",
        "command": "dance.edit.selectRegister-insert",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "shift+r",
        "command": "dance.run",
        "args": {
            "commands": [
                ["dance.select.line.above.extend"],
                ["dance.edit.selectRegister-insert"]
            ]
        },
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    // .
    {
        "key": "oem_period",
        "command": "dance.history.repeat.edit",
        "when": "editorTextFocus && dance.mode == NORMAL"
    },
    {
        "key": "g u",
        "command": "dance.edit.case.swap",
        "when": "editorTextFocus && dance.mode == 'NORMAL'"
    },

    // Numbers
    {
        "key": "0",
        "when": "editorTextFocus && dance.mode == NORMAL",
        "title": "Add the digit 0 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 0,
        },
    },
    {
        "key": "NumPad0",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 0 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 0,
        },
    },
    {
        "key": "1",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 1 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 1,
        },
    },
    {
        "key": "NumPad1",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 1 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 1,
        },
    },
    {
        "key": "2",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 2 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 2,
        },
    },
    {
        "key": "NumPad2",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 2 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 2,
        },
    },
    {
        "key": "3",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 3 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 3,
        },
    },
    {
        "key": "NumPad3",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 3 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 3,
        },
    },
    {
        "key": "4",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 4 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 4,
        },
    },
    {
        "key": "NumPad4",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 4 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 4,
        },
    },
    {
        "key": "5",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 5 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 5,
        },
    },
    {
        "key": "NumPad5",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 5 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 5,
        },
    },
    {
        "key": "6",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 6 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 6,
        },
    },
    {
        "key": "NumPad6",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 6 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 6,
        },
    },
    {
        "key": "7",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 7 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 7,
        },
    },
    {
        "key": "NumPad7",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 7 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 7,
        },
    },
    {
        "key": "8",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 8 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 8,
        },
    },
    {
        "key": "NumPad8",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 8 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 8,
        },
    },
    {
        "key": "9",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 9 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 9,
        },
    },
    {
        "key": "NumPad9",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "title": "Add the digit 9 to the counter",
        "command": "dance.updateCount",
        "args": {
        "addDigits": 9,
        },
    },
    {
        "key": "Shift+oem_period",
        "when": "editorTextFocus && dance.mode == 'NORMAL'",
        "command": "workbench.action.showCommands",
        "args": {
        "$exclude": [],
        },
    },







    // OTROS
    {
        "key": "ctrl+alt+oem_3",
        "command": "dance.edit.case.swap",
        "when": "editorTextFocus && dance.mode == 'normal'"
    },
    {
        "key": "alt+oem_3",
        "command": "-dance.edit.case.swap",
        "when": "editorTextFocus && dance.mode == 'normal'"
    },
    {
        "key": "alt+oem_3",
        "command": "dance.selections.changeDirection",
        "when": "editorTextFocus && dance.mode == 'normal'"
    },
    {
        "key": "alt+oem_1",
        "command": "-dance.selections.changeDirection",
        "when": "editorTextFocus && dance.mode == 'normal'"
    }
]